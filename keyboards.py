from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder, KeyboardBuilder, KeyboardButton
from aiogram import types
from aiogram.filters.callback_data import CallbackData

builder1 = ReplyKeyboardBuilder()
builder1.row(
    types.KeyboardButton(text='–ú–µ–Ω—é')
)
builder1.row(

    types.KeyboardButton(text='–ü–∞—Ä—ã —Å–µ–≥–æ–¥–Ω—è'),
    types.KeyboardButton(text='–ü–∞—Ä—ã –∑–∞–≤—Ç—Ä–∞'),
    types.KeyboardButton(text='–ü–∞—Ä–∞ –Ω–µ–¥–µ–ª—è'),
    types.KeyboardButton(text='–ü–∞—Ä—ã —Å–ª–µ–¥ –Ω–µ–¥–µ–ª—è')
)
builder1.row(
    types.KeyboardButton(text='–ø–æ–≥–æ–¥–∞'),
    types.KeyboardButton(text='–°—Ç–∞—Ä—Ç'),
    types.KeyboardButton(text='—Ä–µ—Å–µ—Ç')
)


def get_numbers(count_people):
    builder = InlineKeyboardBuilder()
    pair_smiles = ['1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£', '7Ô∏è‚É£', '8Ô∏è‚É£', '9Ô∏è‚É£', 'üîü']
    for i in range(count_people):
        builder.button(text=pair_smiles[i], callback_data=f'many_{i}')
    builder.adjust(5, 5)
    return builder.as_markup()


def get_keyboard():
    buttons = [
        [
            types.InlineKeyboardButton(text="üí°–î–æ–ø. –§—É–Ω–∫—Ü–∏–∏", callback_data="menu_additional"),
            types.InlineKeyboardButton(text="üë§–ü—Ä–æ—Ñ–∏–ª—å", callback_data="menu_profile")
        ],
        [
            types.InlineKeyboardButton(text="üë®‚Äçüë©‚Äçüëß‚Äçüë¶–î—Ä—É–∑—å—è", callback_data="menu_friends"),
            types.InlineKeyboardButton(text="üìö–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data="menu_schedule")
        ]
    ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def confirm_delete_friends():
    buttons = [
        [
            types.InlineKeyboardButton(text="‚úÖ–î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data="confirmation_yes"),
            types.InlineKeyboardButton(text="‚ùå–ù–µ—Ç", callback_data="confirmation_no")
        ]
    ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def friend_menu(count_people):
    builder = InlineKeyboardBuilder()
    pair_smiles = ['1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£', '7Ô∏è‚É£', '8Ô∏è‚É£', '9Ô∏è‚É£', 'üîü']
    for i in range(count_people):
        builder.button(text=pair_smiles[i], callback_data=f'friend_{i}')
    builder.button(text="üóë–û—á–∏—Å—Ç–∏—Ç—å", callback_data="friend_deleteAll")
    builder.button(text="‚ûï–î–æ–±–∞–≤–∏—Ç—å", callback_data="friend_add")
    builder.button(text='üîô–ù–∞–∑–∞–¥', callback_data='schedule_prev')
    if count_people == 1:
        builder.adjust(1, 3)
    elif count_people == 2:
        builder.adjust(2, 3)
    elif count_people == 3:
        builder.adjust(1, 2, 3)
    elif count_people == 4:
        builder.adjust(2, 2, 3)
    elif count_people == 5:
        builder.adjust(1, 2, 2, 3)
    elif count_people == 6:
        builder.adjust(2, 2, 2, 3)
    elif count_people == 7:
        builder.adjust(1, 2, 2, 2, 3)
    elif count_people == 8:
        builder.adjust(2, 2, 2, 2, 3)
    elif count_people == 9:
        builder.adjust(1, 2, 2, 2, 2, 3)
    elif count_people == 10:
        builder.adjust(2, 2, 2, 2, 2, 3)
    return builder.as_markup()


def friend_add():
    buttons = [
        [
            types.InlineKeyboardButton(text="‚ûï–î–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∞", callback_data="friend_add"),
        ],
        [
            types.InlineKeyboardButton(text='üîô–ù–∞–∑–∞–¥', callback_data='schedule_prev')
        ]
    ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def get_schedule():
    buttons = [
        [
            types.InlineKeyboardButton(text='–ù–∞ —Å–µ–≥–æ–¥–Ω—è', callback_data='schedule_today')
        ],
        [
            types.InlineKeyboardButton(text='–ù–∞ –∑–∞–≤—Ç—Ä–∞', callback_data='schedule_tomorrow')
        ],
        [
            types.InlineKeyboardButton(text='–ù–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é', callback_data='schedule_this_week')
        ],
        [
            types.InlineKeyboardButton(text='–ù–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é', callback_data='schedule_next_week')
        ],
        [
            types.InlineKeyboardButton(text='üîô–ù–∞–∑–∞–¥', callback_data='schedule_prev')
        ]
    ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def get_schedule_from_friends():
    buttons = [
        [
            types.InlineKeyboardButton(text='–ù–∞ —Å–µ–≥–æ–¥–Ω—è', callback_data='scheduleFriends_today')
        ],
        [
            types.InlineKeyboardButton(text='–ù–∞ –∑–∞–≤—Ç—Ä–∞', callback_data='scheduleFriends_tomorrow')
        ],
        [
            types.InlineKeyboardButton(text='–ù–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é', callback_data='scheduleFriends_this_week')
        ],
        [
            types.InlineKeyboardButton(text='–ù–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é', callback_data='scheduleFriends_next_week')
        ],
        [
            types.InlineKeyboardButton(text='üîô–ù–∞–∑–∞–¥', callback_data='menu_friends')
        ]
    ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def return_from_schedule_friends():
    buttons = [
        [
            types.InlineKeyboardButton(text='üîô–ù–∞–∑–∞–¥', callback_data='menu_friends')
        ]
    ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def return_from_schedule():
    buttons = [
        [
            types.InlineKeyboardButton(text='üîô–ù–∞–∑–∞–¥', callback_data='menu_schedule')
        ]
    ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def get_profile():
    buttons = [
        [
            types.InlineKeyboardButton(text='‚ôªÔ∏è–ò–∑–º–µ–Ω–∏—Ç—å –§–ò–û‚ôªÔ∏è', callback_data='profile_changeName'),
            types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π', callback_data='profile_changeFriends')
        ],
        [
            types.InlineKeyboardButton(text='üîÑ–û–±–Ω–æ–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µüîÑ', callback_data='profile_reload'),
            types.InlineKeyboardButton(text='üîî–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—èüîî', callback_data='profile_notifications')
        ],
        [
            types.InlineKeyboardButton(text='üîô–ù–∞–∑–∞–¥', callback_data='schedule_prev')
        ]
    ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard
